<?xml version="1.0" encoding="UTF-8"?>
<!-- Obsidienne https://obsidienne.gitlab.io/ -->
<svg xmlns="http://www.w3.org/2000/svg" width="600" height="600">
<style>
:root {
    font-family: monospace;
    font-variant: small-caps;
    font-size: 14pt;
    text-shadow: 0 0 3px hsl(288, 60%, 67%);
}
* { transform-origin: 50% 50%; }

.cmd {
    fill: hsl(288, 60%, 67%);
}
#cmd1 {
    animation:
        opacity 4s linear 0s both,
        appearccw 2s linear 0s both,
        cmd1init 2s linear 0s both,
        spin 10s linear 2s infinite;
}
#cmd2 {
    transform: scale(0.70);
    animation:
        opacity 4s linear 0s both,
        appearcw 2s linear 0s both,
        cmd2init 2s linear 0s both,
        cmd2run 10s linear 2s infinite;
}

.circle {
    fill: none;
    stroke: hsl(288, 60%, 67%);
    stroke-width: 2;
    filter: drop-shadow(0 0 3px hsl(288, 60%, 67%));
    animation: opacity 2s linear 2s both;
}
#circle10 { transform: scale(1.10); }
#circle11 { transform: scale(1.05); }
#circle12 { transform: scale(0.90); }
#circle20 { transform: scale(0.75); }
#circle21 { transform: scale(0.625); }

.hex {
    fill: none;
    stroke: hsl(288, 60%, 67%);
    stroke-width: 2;
    filter: drop-shadow(0 0 3px hsl(288, 60%, 67%));
}
#hex1 {
    animation:
        opacity 2s linear 2s both,
        strokelr 2s linear 2s both,
        spin 4s linear 2s infinite;
}
#hex2 {
    animation:
        opacity 2s linear 2s both,
        strokerl 2s linear 2s both,
        spin 4s linear 2s infinite reverse;
}

@keyframes opacity {
    from { opacity: 0.0; }
    to { opacity: 1.0; }
}
@keyframes strokelr {
    from {
        stroke-dasharray: 200%;
        stroke-dashoffset: 200%;
    }
    to {
        stroke-dasharray: 200%;
        stroke-dashoffset: 0%;
    }
}
@keyframes strokerl {
    from {
        stroke-dasharray: 200%;
        stroke-dashoffset: -200%;
    }
    to {
        stroke-dasharray: 200%;
        stroke-dashoffset: 0%;
    }
}
@keyframes appearcw {
    0%   { clip-path: polygon(50% 50%, 0% 50%, 0% 50%, 50% 50%, 50% 50%,  50% 50%,  50%  50%, 50%  50%); }
    25%  { clip-path: polygon(50% 50%, 0% 50%, 0%  0%, 50%  0%, 50%  0%,  50% 50%,  50%  50%, 50%  50%); }
    50%  { clip-path: polygon(50% 50%, 0% 50%, 0%  0%, 50%  0%, 100% 0%, 100% 50%, 100%  50%, 50%  50%); }
    75%  { clip-path: polygon(50% 50%, 0% 50%, 0%  0%, 50%  0%, 100% 0%, 100% 50%, 100% 100%, 50% 100%); }
    100% { clip-path: polygon( 0% 50%, 0% 50%, 0%  0%, 50%  0%, 100% 0%, 100% 50%, 100% 100%,  0% 100%); }
}
@keyframes appearccw {
    0%   { clip-path: polygon(50% 50%, 0% 50%, 0%  50%, 50%  50%,  50%  50%,  50% 50%,  50% 50%, 50% 50%); }
    25%  { clip-path: polygon(50% 50%, 0% 50%, 0% 100%, 50% 100%,  50% 100%,  50% 50%,  50% 50%, 50% 50%); }
    50%  { clip-path: polygon(50% 50%, 0% 50%, 0% 100%, 50% 100%, 100% 100%, 100% 50%, 100% 50%, 50% 50%); }
    75%  { clip-path: polygon(50% 50%, 0% 50%, 0% 100%, 50% 100%, 100% 100%, 100% 50%, 100%  0%, 50%  0%); }
    100% { clip-path: polygon( 0% 50%, 0% 50%, 0% 100%, 50% 100%, 100% 100%, 100% 50%, 100%  0%,  0%  0%); }
}
@keyframes cmd1init {
    from { transform: scale(0.0) rotate(0deg); }
    to   { transform: scale(1.0) rotate(360deg); }
}
@keyframes cmd2init {
    from { transform: scale(0.0) rotate(360deg); }
    to   { transform: scale(0.7) rotate(0deg); }
}
@keyframes cmd2run {
    from { transform: scale(0.7) rotate(360deg); }
    to   { transform: scale(0.7) rotate(0deg); }
}
@keyframes spin {
    from { transform: rotate(0deg); }
    to   { transform: rotate(360deg); }
}

</style>

<defs>
    <path id="c1path" d="M 100 300 A 50 50 0 1 1 500 300 A 50 50 0 1 1 100 300"/>
    <path id="c2path" d="M 100 300 A 50 50 0 1 0 500 300 A 50 50 0 1 0 100 300"/>
    <path id="hexpath" d="M 300 480 L 150 400 L 150 300 L 150 200 L 300 120 L 450 200 L 450 300 L 450 400 Z"/>
</defs>

<use id="hex1" class="hex" href="#hexpath"/>
<use id="hex2" class="hex" href="#hexpath"/>
<use id="circle10" class="circle" href="#c1path"/>
<use id="circle11" class="circle" href="#c1path"/>
<use id="circle12" class="circle" href="#c1path"/>
<use id="circle20" class="circle" href="#c2path"/>
<use id="circle21" class="circle" href="#c2path"/>
<text id="cmd1" class="cmd" textLength="210%">
    <textPath href="#c2path">
    [luna][nanoha][~/public][master] > ./generate.sh
    --clean &amp;&amp; git commit -am 'generate - posts'&#160;
    </textPath>
</text>
<text id="cmd2" class="cmd" textLength="210%">
    <textPath href="#c2path">
    [1e20114] (head -> master, origin/master, origin/head)
    generate - posts&#160;
    </textPath>
</text>
</svg>
