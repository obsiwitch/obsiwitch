$white:   hsl(220, 15%, 70%);
$grey1:   hsl(220, 15%, 25%);
$grey2:   hsl(220, 15%, 40%);
$black1:  hsl(220, 15%, 18%);
$black2:  hsl(220, 15%, 20%);
$red1:    hsl(  5, 55%, 52%);
$red2:    hsl(  5, 55%, 62%);
$yellow1: hsl( 39, 67%, 65%);
$yellow2: hsl( 39, 67%, 75%);
$blue1:   hsl(207, 82%, 66%);
$blue2:   hsl(207, 82%, 76%);
$green1:  hsl( 95, 38%, 62%);
$green2:  hsl( 95, 38%, 72%);
$purple1: hsl(288, 60%, 67%);
$purple2: hsl(288, 60%, 77%);

@mixin box(
    $background: $black1,
    $border: 1px solid $white,
    $margin: 1em 0,
    $padding: 0 1em,
) {
    background: $background;
    border: $border;
    margin: $margin;
    padding: $padding;
}

body {
    background: $black2 url("bg.svg");
    font-family: monospace;
    line-height: 1.6;
    color: $white;
}

p { text-align: justify; }

a {
    color: $purple2;
    text-decoration: none;
    &:hover { text-decoration: underline; }

    img.preview {
        display: none;
        position: absolute;
        z-index: 1;
        margin: 0 1em;
        max-width: 200px;
        max-height: 200px;
        background: $grey1;
        border: 1px solid $white;
    }
    &:hover img.preview { display: inline-block; }
}

svg.icon {
    width: 0.95em;
    height: 0.95em;
    vertical-align: -0.125em;
    fill: none;
    stroke: currentColor;
    stroke-width: 2;
}

main {
    @include box($background: $black2, $margin: auto);
    max-width: 80ch;
    > header {
        font-size: 2em;
        font-variant: small-caps;
        border-bottom: 1px solid $purple2;
        a:hover { text-decoration: none; }
    }
}

h1, h2, h3, h4, h5, h6 {
    line-height: normal;
    font-weight: normal;
}

article header {
    h1 {
        font-weight: bold;
        margin-bottom: 0;
    }
    time { color: $grey2; }
}

nav {
    @include box;
    ul, ol {
        list-style-type: none;
        padding: 0;
    }
}

blockquote {
    @include box($background: none, $border: none);
    border-left: 4px solid $white;
    &.info { border-color: $blue1; }
    &.warning { border-color: $yellow1; }
    &.error { border-color: $red1; }
}

code {
    background: $grey1;
    border: 1px solid $grey2;
    a.sourceLine {
        color: inherit;
        text-decoration: none;
    }

    // char, specialchar, string, specialstring, verbatimstring
    .ch, .sc, .st, .ss, .vs { color: $green1; }

    // constant, basen, decval, float
    .cn, .bn, .dv, .fl { color: $yellow1; }

    // comment, commentvar, documentation
    .co, .cv, .do { color: $grey2; }

    // function, annotation, attribute, extension
    .fu, .an, .at, .ex { color: $blue1; }

    // builtin, import, preprocessor, datatype, keyword, controlflow
    .bu, .im, .pp, .dt, .kw, .cf { color: $purple1; }

    // variable, operator, other
    .va, .op, .ot { color: $red2; }

    // alert, error, information, warning
    .al, .er, .in, .wa {}
}

pre {
    white-space: pre-wrap;
    word-break: break-word;
    &.sourceCode { @include box($padding: 1em); }
    code {
        background: inherit;
        border: none;
    }
}
